(in-package :ghostie)

(defclass phx-world (phx-obj)
  ((phx-type :initform :world)
   (bodies :accessor phx-world-bodies :initform nil)
   (space :accessor phx-world-space :initform nil)
   (contact-group :accessor phx-world-contact-group :initarg :contact-group :initform nil)))

(defun make-physics-world ()
  (let ((world (ode:world-create)))
    ;(ode:init-ode)
    (ode:world-set-auto-disable-flag world +physics-auto-disable-bodies+)
    (ode:world-set-auto-disable-linear-threshold world +physics-auto-disable-linear-threshold+)
    (ode:world-set-auto-disable-angular-threshold world +physics-auto-disable-angular-threshold+)
    (ode:world-set-contact-surface-layer world +physics-contact-surface-layer+)
    (ode:world-set-contact-max-correcting-vel world +physics-contact-max-correcting-vel+)
    (ode:world-set-quick-step-num-iterations world +physics-step-num-iterations+)
    (ode:world-set-quick-step-w world +physics-step-w+)
    (ode:world-set-damping world +physics-linear-damping+ +physics-angular-damping+)
    (ode:world-set-linear-damping-threshold world +physics-linear-damping-threshold+)
    (ode:world-set-angular-damping-threshold world +physics-angular-damping-threshold+)
    (ode:world-set-cfm world +physics-global-cfm+)
    (ode:world-set-erp world +physics-global-erp+)
    (ode:world-set-gravity world 0.0 +physics-gravity+ 0.0)
    (make-instance 'phx-world :phx world :contact-group (make-joint-group))))

(defun cleanup-physics-world (world)
  (space-destroy (phx-world-space world))
  (when (phx-destroy world)
    (ode:world-destroy (phx-obj world))))


